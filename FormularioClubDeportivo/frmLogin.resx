<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /SRh9uRldvKNhyCg9fvVzrziK6hku1Enhit3dCwjZSyWsMvhKL4pN8oY/cKE4HLl09S1Wa10ma5WUtMi
        krJmF8HI/wBmoTz6Yz61tu9Mk1tX/HVzNxKqhNHngkV9zSCFy7jBG0kRA4yc8z90VYnZPosmiWCxypsk
        d2dlOMjOFXOPPao5eVRThk6/rWGM5gjP35YYgSP3Y+73H57R76srR7OSzTEtw87+bOsaD+FY1GB8cn30
        yvGjGc7dGlKVCylKUClKUClKUClKUClKUClKUClKUH42jny69ffWOW2SVQjIrKMYUqCBjpgHlyrPSgwt
        CrlWKqSvskgEj4Hy+VfUiVTkKAefMAeZyfqedZaUGt9kTBHdpgtuI2jBY9SRjr76/fcJv7zau/GN2Bux
        6Z64rNSgwfZ03F9i7mGC20ZI9CepFfTCrYyoOBgZA5Dl0+g+grNSgx7Bz5Dn15dfLn68q/D26OMFFI5d
        QD06fT/Os9KDB9nXpsX+Uem3+7l8OVfY4VjG1VUDOcAADPwFZqUClKUClKUClKUClKUClKUClKUClKUC
        lKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUC
        lKUClKUClKUClKUClKUClKUClKUClKUH/9k=
</value>
  </data>
</root>